const CACHE_NAME="v28",resourcesToCache=["/","/styles/main.css","/styles/print.css","/scripts/main.js","/scripts/more.js","/fonts/notoSans-Regular.woff2","/fonts/notoSerif-Regular.woff2","/sprites/util.svg","/sprites/player.svg","/medias/images/logo/logo.svg"];async function addResourcesToCache(e){const t=await caches.open(CACHE_NAME);await t.addAll(e)}async function putInCache(e,t){const s=await caches.open(CACHE_NAME);await s.put(e,t)}async function isCorrupted(e){if(!e||!e.ok)return!0;try{const t=e.clone(),s=t.headers.get("Content-Type");if(s&&(s.startsWith("video/")||s.startsWith("image/"))){const e=t.headers.get("Content-Length");if(e&&parseInt(e,10)<1024)return!0}return!1}catch(e){return!0}}async function networkFirst({request:e}){try{const t=await fetch(e);return t&&t.ok&&putInCache(e,t.clone()),t}catch(t){const s=await caches.open(CACHE_NAME),a=await s.match(e);return a||new Response("Une erreur rÃ©seau s'est produite et la ressource n'est pas dans le cache.",{status:408,headers:{"Content-Type":"text/plain; charset=utf-8"}})}}self.addEventListener("install",(e=>{self.skipWaiting(),e.waitUntil(addResourcesToCache(resourcesToCache))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>e!==CACHE_NAME)).map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.respondWith(networkFirst({request:e.request}))}));