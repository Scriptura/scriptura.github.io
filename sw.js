async function addResourcesToCache(e){const s=await caches.open("v10");await s.addAll(e)}async function putInCache(e,s){const t=await caches.open("v1");await t.put(e,s)}async function cacheFirst({request:e,fallbackUrl:s}){const t=await caches.match(e);if(t)return t;try{const s=await fetch(e);return await putInCache(e,s.clone()),s}catch(e){const t=await caches.match(s);return t||new Response("Une erreur rÃ©seau s'est produite",{status:408,headers:{"Content-Type":"text/plain"}})}}self.addEventListener("install",(e=>{e.waitUntil(addResourcesToCache(["/","/styles/main.css","/styles/print.css","/scripts/main.js","/scripts/more.js","/fonts/notoSans-Regular.woff2","/fonts/notoSerif-Regular.woff2","/sprites/util.svg","/sprites/player.svg","/medias/images/logo/logo.svg"]))})),self.addEventListener("fetch",(e=>{e.respondWith(cacheFirst({request:e.request,fallbackUrl:"/medias/images/demo/test-original.webp"}))}));