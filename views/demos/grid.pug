p
  code .grid4.gap
.grid4.row-defines.gap.demo-counter.demo-items-empty(style='--itemHeight:5em')
  //- .demo-items-color
  - for (let i = 0; i < 4; i++)
    div
  .c4
    code .c4
  .r4
    code .r4
  .c2
    code .c2
  .r2
    code .r2
  div
  .r3
    code .r3
  .c3
    code .c3
  - for (let i = 0; i < 5; i++)
    div
hr(data-hr='✻ ✻ ✻')
p
  code .grid4
.grid4.row-defines.demo-counter.demo-items-empty(style='--itemHeight:5em')
  - for (let i = 0; i < 4; i++)
    div
  .c4
    code .c4
  .r4
    code .r4
  .c2
    code .c2
  .r2
    code .r2
  div
  .r3
    code .r3
  .c3
    code .c3
  - for (let i = 0; i < 5; i++)
    div
hr(data-hr='✻ ✻ ✻')
p
  code .grid2.gap
.grid2.row-defines.gap.demo-counter.demo-items-empty(style='--itemHeight:5em')
  div
  div
  .c2
    code .c2
  div
  div
hr(data-hr='✻ ✻ ✻')
p
  code .grid3.gap
.grid3.row-defines.gap.demo-counter.demo-items-empty(style='--itemHeight:5em')
  div
  div
  div
  .r2
    code .r2
  div
  div
  div
  .r2.c2
    code .r2.c2
  .c2
    code .c2
  .c3
    code .c3
  div
  div
  div
  div
hr(data-hr='✻ ✻ ✻')
//-
  p
    code .grid5.gap
  .grid5.row-defines.gap.demo-counter.demo-items-empty(style='--itemHeight:5em')
    .r4
      code .r4
    div
    div
    div
    div
    .c2
      code .c2
    .c3
      code .c3
    .c4
      code .c4
    div
    div
    div
  hr(data-hr='✻ ✻ ✻')
p
  code .grid4.gap.masonry
.grid4.gap.masonry.demo-counter.demo-items-empty(style='--itemHeight:5em')
  div(style='height:5em')
  .c2(style='height:12em')
    code .c2
  div(style='height:7em')
  div
  div(style='height:8em')
  div(style='height:7em')
  div(style='height:12em')
  div(style='height:6em')
  div(style='height:8em')
  div
  div(style='height:9em')
  div(style='height:5em')
  div(style='height:6em')
  div(style='height:7em')
hr(data-hr='✻ ✻ ✻')
p
  code .grid-auto.gap
.grid-auto.gap.demo-items-empty(style='--itemHeight:5em')
  - for (let i = 0; i < 20; i++)
    div
hr(data-hr='✻ ✻ ✻')
p
  code .grid-auto.gap(style='--size-grid:5em')
.grid-auto.gap.demo-items-empty(style='--size-grid:5em;--itemHeight:5em')
  - for (let i = 0; i < 30; i++)
    div
hr(data-hr='✻ ✻ ✻')
p
  code .grid-auto-min.gap
.grid-auto-min.gap.demo-items-empty(style='--itemHeight:5em')
  - for (let i = 0; i < 20; i++)
    div
hr(data-hr='✻ ✻ ✻')
.grid2.s-grid1.gap-top
  div
    .message-highlight
      svg.icon(role='img' focusable='false')
        use(href='/sprites/util.svg#info')
      div
        p Les grilles utilisent les modules CSS Grid Layout, Container Queries et les opérateurs mathématiques de comparaison (Media Queries Level 4).
        P Voir pour les supports de 
          a(href='https://caniuse.com/mdn-css_properties_container') Container Queries
          |  et 
          a(href='https://caniuse.com/css-media-range-syntax') Media Queries: Range Syntax
          | .
  figure.center
    svg.size.decorative-svg.sprite-to-inline.svg-animation.invisible-if-animation(role='img' focusable='false' style='--size: 30em;--size-height: 10em')
      use(href='/sprites/silos/39r.svg#a')
