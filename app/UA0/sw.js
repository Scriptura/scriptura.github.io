const CACHE_NAME="v65",MEDIA_CACHE_NAME="media-v65",ROOT_PATH="/app/UA0/",OFFLINE_URL=`${ROOT_PATH}index.html`,resourcesToCache=[`${ROOT_PATH}`,`${ROOT_PATH}styles/main.css`,`${ROOT_PATH}scripts/main.js`,`${ROOT_PATH}fonts/notoSans-Regular.woff2`,`${ROOT_PATH}fonts/notoSerif-Regular.woff2`,`${ROOT_PATH}fonts/OleoScriptSwashCaps-Regular.woff2`,`${ROOT_PATH}sprites/util.svg`,`${ROOT_PATH}medias/images/logo.svg`,`${ROOT_PATH}medias/images/uploads/CalvinAndHobbes.webp`,OFFLINE_URL];async function addResourcesToCache(e){try{const a=await caches.open("v65");await a.addAll(e)}catch(e){console.error(`Erreur lors de l'ajout des ressources au cache: ${e}`)}}async function putInCache(e,a,t="v65"){try{const s=await caches.open(t);await s.put(e,a)}catch(e){console.error(`Erreur lors de la mise en cache: ${e}`)}}async function notifyServiceUnavailable(){try{(await clients.matchAll()).forEach((e=>{e.postMessage({action:"service-unavailable"})}))}catch(e){console.error(`Erreur lors de la notification d'indisponibilitÃ©: ${e}`)}}async function networkFirst({request:e}){try{const a=await fetch(e);return a&&a.ok&&await putInCache(e,a.clone()),a}catch(a){await notifyServiceUnavailable();const t=await caches.open("v65"),s=await t.match(e);return s||t.match(OFFLINE_URL)}}self.addEventListener("install",(e=>{self.skipWaiting(),e.waitUntil(addResourcesToCache(resourcesToCache))})),self.addEventListener("activate",(e=>{e.waitUntil((async()=>{try{const e=await caches.keys();await Promise.all(e.filter((e=>"v65"!==e&&"media-v65"!==e)).map((e=>caches.delete(e)))),await self.clients.claim()}catch(e){console.error(`Erreur lors de l'activation du service worker: ${e}`)}})())})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.respondWith(networkFirst({request:e.request}))})),self.addEventListener("message",(e=>{e.data&&"service-unavailable"===e.data.action&&document.documentElement.classList.add("service-unavailable")}));