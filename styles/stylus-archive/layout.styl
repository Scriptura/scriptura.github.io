html
body
  overflow-x: clip // @note Pour des éléments en clip-path dont l'élément d'origine dépasse, tel que les Ribbons @bugfixed @affected Android @note L'appel des deux sélecteurs `html` et `body` est nécessaire pour couper les dépassements sous ce navigateur, la sélection d'un seul des deux ne suffira pas. La valeur hidden pourrait faire l'affaire, mais elle entre en conflit avec position:sticky.
  height: 100% // @note Alternative plus fiable sur mobile que `min-height:100vh` sur le body.

body
  display: grid
  grid-template-rows: repeat(3, auto) 1fr // permet à 'main' (4ème rangée) d'occuper tout l'espace vertical disponible.
  grid-template-columns: minmax(_gap, 1fr) minmax(0, _wrap) minmax(_gap, 1fr) // @bugfix @affected All browser @note définition d'une valeur minimum obligatoire pour harmoniser le comportement des différents navigateurs : par défaut Chrome affecte la largeur d'une gouttière, Firefox affecte à 0.
  grid-template-areas: 'n n n' '. h .' 'i i i' '. m .' 'a a a' 'f f f'
  //min-height: 100vh // @note Gabarit sur la totalité de la hauteur de la fenêtre, même si le contenu ne permet pas d'atteindre le bas de la fenêtre.
  margin: 0 // @bugfix Remove the margin @affected All browser

main
  grid-area: m
  //padding _gap 0 // @note Surtout pas : après il faut compenser partout !
  word-break: break-word // @note Évite d'exploser le design sur les mots insécables, raison pour laquelle cette règle est située au niveau du layout. @todo En test.
  padding-block-end: _gap // @todo En test...

.nav
  grid-area: n

.header
  grid-area: h

.alert
  grid-area: i

.aside
  grid-area: a

.footer
  grid-area: f

[tabindex=-1]:focus:not(:focus-visible)
  outline: 0 !important // Future-proof rule: in browsers that support :focus-visible, suppress the focus outline on elements that programmatically receive focus but wouldn't normally show a visible focus outline. In general, this would mean that the outline is only applied if the interaction that led to the element receiving programmatic focus was a keyboard interaction, or the browser has somehow determined that the user is primarily a keyboard user and/or wants focus outlines to always be presented. @ee https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible @see https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/
