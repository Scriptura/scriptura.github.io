@use 'variable' as *;

.input label {
  display: inline-block;
  margin-block-end: 0.5em;
}

.input
  input:not([type='button'], .input [type='submit'], .input [type='range']),
.input select,
.input textarea {
  width: 100%;
  color: currentcolor;
  background-color: var(--colorG15) !important; // --colorG18
  border: var(--border1); // --colorG27
  border-radius: 0.3em;
  box-shadow: inset 0 0.2em 0.5em var(--colorAB2) !important;
}

.input
  input:not([type='button'], .input [type='submit'], .input [type='range']),
.input select:not([multiple]) {
  height: 3em;
  max-height: 3em;
  line-height: 3em;
  padding-inline: 1em;
}

.input input[type='color'] {
  padding: 2px !important;
}

.input input[type='color']::-webkit-color-swatch {
  border: none;
}

.input input[type='color']::-webkit-color-swatch-wrapper {
  padding: 0;
}

.input input[type='date'],
.input input[type='datetime-local'],
.input input[type='week'],
.input input[type='month'] {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(0, 0%, 47%)'><path d='M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z'/></svg>");
}

.input input[type='date']:focus,
.input input[type='datetime-local']:focus,
.input input[type='week']:focus,
.input input[type='month']:focus,
.input input[type='date']:hover,
.input input[type='datetime-local']:hover,
.input input[type='week']:hover,
.input input[type='month']:hover {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(39, 100%, 50%)'><path d='M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z'/></svg>");
}

.input input[type='month'] {
  text-transform: capitalize;
}

.input input[type='time'] {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(0, 0%, 47%)'><path d='M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z'/><path d='M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z'></path></svg>");
}

.input input[type='time']:focus,
.input input[type='time']:hover {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(39, 100%, 50%)'><path d='M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z'/><path d='M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z'></path></svg>");
}

.input input[type='file'] {
  padding-inline-end: 3em;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(0, 0%, 47%)'><path d='M18,15v3H6v-3H4v3c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2v-3H18z M7,9l1.41,1.41L11,7.83V16h2V7.83l2.59,2.58L17,9l-5-5L7,9z'></path></svg>");
}

.input input[type='file']:focus,
.input input[type='file']:hover,
.input input[type='file']:active {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(39, 100%, 50%)'><path d='M18,15v3H6v-3H4v3c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2v-3H18z M7,9l1.41,1.41L11,7.83V16h2V7.83l2.59,2.58L17,9l-5-5L7,9z'></path></svg>");
}

.input select:not([multiple]) {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(0, 0%, 47%)'><path d='M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z'/></svg>");
  background-size: 1.5em 1.5em;
  background-repeat: no-repeat;
  background-position: calc(100% - 0.4em) 50%;
}

.input select:not([multiple]):focus,
.input select:not([multiple]):hover {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(39, 100%, 50%)'><path d='M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z'/></svg>");
}

.input select:not([multiple]):active {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='hsl(0, 0%, 47%)'><path d='M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z'/></svg>");
}

.input select[multiple] {
  min-height: 3em;
  padding: 0.4em 1em;
}

.input textarea {
  min-height: 9.75em;
  max-height: 50vh;
  padding: 1em;
  line-height: 1.5;
  resize: vertical;
}

.input input:not([type='button']):focus,
.input select:focus,
.input textarea:focus {
  border-color: var(--color2);
  outline: none;
}

.input.disabled label {
  color: var(--colorG60);
}

.input.disabled input {
  background: var(--colorG18)
    repeating-linear-gradient(-45deg, transparent 0 5px, var(--color1) 5px 10px);
  background-size: 100% 100%;
  cursor: default;
}

.input .invalid {
  background-position: right 0.7em center;
}

.input .invalid {
  animation: anim-invalid-input 2s ease-in-out infinite !important;
}

.input input + [class*='message'] {
  margin-block-start: 1em;
}

.input:has([type='color'] + output) {
  position: relative;
}

.input:has([type='color'] + output) output {
  position: absolute;
  left: 0.5em;
  bottom: 0.6em;
  margin: 2px;
  padding: 0.2em 0.5em;
  font-family: monospace, monospace;
  color: var(--colorW);
  background-color: var(--colorAB5);
  pointer-events: none;
}

:root .input-password input {
  padding-inline-end: 3em;
  letter-spacing: 0.4em;
}

.input-password {
  position: relative;

  & button {
    position: absolute;
    bottom: 3em/2;
    right: 0.5em;
    width: 2.1em;
    height: 2.8em;
    padding: 0.5em;
    color: hsl(0, 0%, 47%);
    background-color: transparent;
    border: none;

    &:focus {
      outline: none;
    }

    &:where(:focus, :hover, :active) {
      color: var(--color5);
    }

    & svg {
      width: 100%;
      height: 100%;
    }
  }
}

.search form {
  display: flex;
  width: 100%;
  height: 3em;
  align-items: stretch;

  & * {
    outline: none;
  }

  & input {
    flex-grow: 1;
    max-height: 100%;
    padding: 0.4em 1em;
    color: currentcolor;
    background-color: var(--colorG15); // --colorG18
    border: var(--border1); // --colorG27
    border-right: none;
    border-radius: 1.5em 0 0 1.5em;
    box-shadow: inset 0 0.2em 0.5em var(--colorAB2);

    &:where(:focus, :hover, :active) {
      border-color: var(--color2);
    }
  }

  & button {
    min-width: 3.5em;
    color: var(--colorT);
    background-color: var(--color2);
    border: none;
    border-radius: 0 1.5em 1.5em 0;
    box-shadow: inset 0 0.2em 0.5em var(--colorAB2);

    &:where(:focus, :hover, :active) {
      color: var(--colorW);
      animation: anim-search 0.2s ease-in-out;
    }

    & svg {
      width: 1em;
      height: 1em;
    }
  }
}

@keyframes anim-invalid-input {
  50% {
    border-color: var(--color5);
  }
}
