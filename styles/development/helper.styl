.hidden
[hidden]
  display: none !important

// @note container-name "grid" définit dans grid.styl.

@container grid (35.01em < width)

  .hidden-xs
    display: none !important

@container grid (35.01em < width < 50.01em)

  .hidden-s
    display: none !important

@container grid (50.01em < width < 70.01em)

  .hidden-m
    display: none !important

@container grid (70.01em < width < 92.01em)

  .hidden-l
    display: none !important

.invisible // @note Cacher l'élément en laissant son emplacement @affected Lecteurs d'écran inclus
  visibility: hidden

a[aria-disabled=true] // @tod En expérimentation.
  cursor: not-allowed
  &:active
    pointer-events: none

// @note Caché visuellement mais disponible pour les lecteurs d'écran.
// @see https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/style.css

.sr-only
  position: absolute
  clip-path: inset(50%)

/*
.sr-only
  position: absolute
  overflow: hidden
  width: 1px
  height: 1px
  margin: -1px
  padding: 0
  white-space: nowrap
  border: 0
  clip-path: rect(0, 0, 0, 0)
*/

//.relative // @note Classe habituellement ajoutée en js sur des éléments parents
//  position: relative

.protected // @note Protège partiellement le texte en empêchant sa sélection
  user-select: none

.onaline // @note Texte sur une ligne sans dépassement
  overflow: hidden
  white-space: nowrap
  text-overflow: ellipsis

.center
  display: grid
  place-items: center
  // @note Ancienne solution :
  //align-items: center
  //justify-content: center
  // @note Alternative :
  //& > *
  //  place-self: center // @support @see https://caniuse.com/?search=place-self

//.center-x // @todo
//.center-y // @todo

//.push
//  margin-left: auto

//[class*=rotate]
//  transform-origin: 50% 50%

for _i in 90 180 // 45 135
  .rotate{_i}
    transform: rotate(_i * 1deg)

// @note .zoom permet de jouer sur la taille des éléments enfants codés en unité relative
// - cette technique est incompatible avec les unités les éléments utilisant vmin
// - pas de possibilité de zoom avec cette technique au-dessous de 50%
// - pas de '.scale100' : aucun intérêt...
.reverse
  transform: scaleX(-1)

[class^=size]
  max-width: 100%
  max-height: 100vh
  //background-color: #333

for _i in 1..25
  .size{_i}
    width: _i * 1em
    height: _i * 1em

for _i in 1000 900 800 700 600 500 450 400 350 300 250 200 175 160 150 140 130 120 115 110 105 95 90 85 80 75 70 60 50
  .scale{_i}
    font-size: _i * 1%

.rescale
  font-size: 1rem // @note Réinitialisation d'un élément enfant si élément parent zoomé, valeur égale à la taille d'origine

.blink
  //animation: anim-blink 2s linear infinite
  animation: anim-blink 1s steps(2, start) infinite

@keyframes anim-blink
  to
    visibility: hidden

.no-overscroll
  overscroll-behavior-x: none // @note Empèche la navigation par swipe sur mobile.
