.nav {
  position: relative;
  /* @note Permet de passer au-dessus du pseudo élément de body (ce dernier faisant un effet d'ombrage sur le contenu en version mobile) et aussi de certains éléments définis par des sources externes (comme les Maps Leaflet). */
  z-index: 2000;
  display: grid;
  user-select: none;
  background-color: var(--colorG15);

  @media (width < $sizeNav) {
    grid-template-rows: 3em;
    grid-template-columns: 3em minmax(0, 1fr) 3em;
    grid-template-areas: 'logo breadcrumb cmd';
  }

  @media (width > $sizeNav) {
    grid-template-rows: repeat(2, 2.5em);
    grid-template-columns: 5em minmax(0, 1fr);
    grid-template-areas: 'logo subnav' 'logo breadcrumb';
  }

  & .avatar {
    display: inline-block;
    vertical-align: -0.5em;
    width: 1.7em;
    aspect-ratio: 1;
    margin-inline-end: 0.5em;
    background-color: var(--colorG27);
    background-image: var(--img, '');
    background-size: cover;
    border-radius: 50%;
  }
}

.logo-nav {
  grid-area: logo;
  display: block;
  box-shadow: 0.5rem 0.5rem 0.5rem var(--colorAB2);
  background-color: var(--color2);

  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background-image: url('../medias/images/logo/logo.svg'); /* '../medias/images/logo/195v.svg' */
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: auto 70%;
    filter: brightness(1.25) contrast(1.25);
  }

  a&:where(:focus-within, :hover) {
    background-color: var(--color5);

    &::after {
      animation: anim-logo 0.5s ease-in-out;
    }
  }
}

@keyframes anim-logo {
  30% {
    transform: rotate(-30deg);
  }
}

.sub-nav {
  grid-area: subnav;
  box-shadow: 0.5rem 0.5rem 0.5rem var(--colorAB2);
  display: flex;
  width: 100%;
  margin: 0;
  padding: 0;

  & .current {
    background-color: var(--color2);

    @media (width > $sizeNav) {
      position: relative;
      /* @note La valeur doit être suffisante pour passer au-dessus des items de ".breadcrumb." */
      z-index: 10;

      &::after {
        content: '';
        position: absolute;
        top: 100%;
        left: calc(50% - 1em);
        width: 2em;
        height: 1em;
        background-color: var(--color2);
        clip-path: polygon(0 0, 100% 0, 50% 100%);
      }
    }
  }

  @media (width > $sizeNav) {
    & > :last-child {
      margin-inline-start: auto;
    }
  }

  @media (width < $sizeNav) {
    position: absolute;
    z-index: 800;
    top: 3em;
    left: 0;
    width: 100vw;
    flex-wrap: wrap;
    transform: translateX(-110vw);
  }

  & li {
    list-style: none;
    @media (width < $sizeNav) {
      flex: 1;
      flex-basis: 50%;
      background-color: var(--colorG15);
      /* transform: rotate(90deg); */
      /* @todo En test pour les performances. */
      transform: rotate(90deg) translateZ(0);

      @media (prefers-reduced-motion: no-preference) {
        transition: transform 0.4s ease-in-out;
      }

      .active & {
        /* @note L'utilisation des pourcentages provoque un effet de bord avec overflow:clip sur le body ; à éviter. Valeur au-delà de 100vw afin de cacher les ombres des boîtes. */
        transform: translateX(110vw) rotate(0deg);
      }
      @for $i from 1 to 12 {
        &:nth-child($i) {
          transition-delay: calc($i * 0.05s);
        }
      }
    }

    @media ($sizeXS < width < $sizeS) {
      flex-basis: 33%;
    }

    @media ($sizeS < width < $sizeNav) {
      flex-basis: 25%;
    }

    & > * {
      display: block;
      padding: 0 1em;
      box-shadow: inset 0.5rem 0.5rem 0.5rem var(--colorAB2);
      @media (width < $sizeNav) {
        line-height: 3;
      }
      @media (width > $sizeNav) {
        line-height: 2.5;
      }
      &.current {
        color: var(--colorW);
      }
    }
  }

  & a {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    /* color: var(--colorT2); */
    text-decoration: none;

    &:where(:focus, :hover, .active) {
      /* color: var(--colorW); */
      background-color: var(--color2);

      & svg {
        animation: anim-jump 0.5s ease-in-out;
      }
    }
  }
}

@media (width < $sizeNav) {
  :where(html, body).active {
    overflow: clip;
  }
  body.active {
    &::before {
      content: '';
      position: absolute;
      z-index: 1;
      inset: 0;
      background-color: var(--colorAB7);
    }
    & :where(main, footer, aside) {
      user-select: none;
      pointer-events: none;
      filter: blur(2px) grayscale(1);
    }
  }
}

@media (width > $sizeNav) {
  @keyframes anim-jump {
    30% {
      transform: translateY(-0.3em);
    }
  }
}

.cmd-nav {
  all: unset;
  grid-area: cmd;

  .no-js & {
    display: none;
  }

  @media (width > $sizeNav) {
    display: none;
  }

  @media (width < $sizeNav) {
    padding: 0.5em;
    cursor: pointer;
    background-color: var(--colorG15);
    transition: background-color 0.3s;

    & rect {
      transform-origin: center;
      fill: var(--colorT);
      @media (prefers-reduced-motion: no-preference) {
        transition: all 0.2s cubic-bezier(0.55, -0.65, 0, 2.32); /* cubic-bezier(0.55, -0.65, 0, 2.32); */
      }
    }

    &:not(:focus, :hover, [aria-expanded='true']) {
      & svg {
        border-radius: 50%;
        background-color: var(--color2);
      }

      & rect {
        x: 45px;
        width: 10px;
      }
    }

    &:where(:focus, :hover, [aria-expanded='true']) {
      background-color: var(--color2);
    }

    &[aria-expanded='true'] svg {
      & :nth-child(1) {
        y: 47px;
        transform: rotate(45deg);
      }

      & :nth-child(2) {
        transform: rotate(-45deg);
      }

      & :nth-child(3) {
        y: 47px;
        transform: rotate(-45deg);
      }
    }
  }
}
