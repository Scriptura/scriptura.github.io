.article {
  display: grid;
  grid-template-columns: minmax(0, 60em) minmax(0, 1fr);
  gap: var(--gap) 0;

  & > header {
    grid-column: span 2;
  }

  & h1 {
    margin-block-end: 0.44em;
  }

  & > :where(.wrapper, article, form) {
    grid-column: 1;
    max-width: 55em;
  }

  & .sub-header,
  & article header {
    display: grid;
    grid-template-columns: 3.5em minmax(0, 1fr);
    grid-template-areas: 'aa tt' 'aa uu';
  }

  & article header {
    position: relative;
    margin-block-end: 1em;
    padding-block-end: 1em;
    border-bottom: 0.1em solid var(--colorG27);
  }

  & .sub-header {
    margin-block: 2em 1em;
  }

  & article {
    position: relative;
  }

  & form {
    width: 100%;
  }

  & .avatar {
    grid-area: aa;
    width: 3em;
    aspect-ratio: 1;
    background: var(--colorG13) var(--img, '');
    background-size: cover;
    border-radius: 50%;
  }

  & address {
    grid-area: tt;
    font-style: normal;
    font-weight: bold;
    font-variant: small-caps;

    & a {
      text-decoration: none;
    }
  }

  & time {
    grid-area: uu;
  }

  & .keywords {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em 0.5em;
    margin-block: 0.75em 0;
    padding-inline-start: 0;
    font-size: 0.8em;

    & > :last-child {
      margin-inline-end: 0;
    }

    & li {
      margin-block-end: 0.75em;
    }

    & a {
      padding: 0.25em 0.5em 0.25em 1.25em;
      text-decoration: none;
      white-space: nowrap;
      background-color: var(--colorG15);
      clip-path: polygon(0.75em 0, 100% 0, 100% 100%, 0.75em 100%, 0 50%);
    }
  }

  & .anchor {
    /* @note Ancre placÃ©e sur les commentaires. */
    position: absolute;
    right: 0;
    bottom: 1em;
    color: var(--colorG38);
    text-decoration: none;

    &:where(:focus, :hover, :active) {
      color: var(--colorW);
    }
  }

  & > footer {
    grid-column: 1;
    display: flex;
    justify-content: flex-end;
    gap: var(--gap);
    max-width: 55em;
  }
}

@media (width < $sizeXS) {
  .article {
    & .wrapper {
      margin-block-start: calc(-1 * var(--gap));
    }

    & article {
      padding-block: var(--gap);
    }
  }
}

@media (width > $sizeXS) {
  .article > :where(.wrapper, article, form) {
    border-radius: var(--r1);
    box-shadow: var(--shadow3);
  }
}

@media ($sizeXS < width < $sizeS) {
  .article > :where(.wrapper, article, form) {
    padding: 2.5em 4em;
  }
}

@media (width > $sizeS) {
  .article {
    & > :where(.wrapper, article, form) {
      padding: 4em 6em;
    }
    & > :where(.wrapper, article, form):nth-child(odd) {
      margin-inline-start: auto;
    }
  }
}

@media ($sizeXS < width < $sizeS) {
  .article > footer {
    padding-inline: 4em;
  }
}

@media (width > $sizeS) {
  .article > footer {
    padding-inline: 6em;
  }
}

@media (width > $sizeXS) {
  .boxx {
    padding: 4em 6em;
    border-radius: var(--r1);
    box-shadow: var(--shadow3);
  }
}

main > article > footer {
  grid-column: 1;
  display: flex;
  justify-content: flex-end;
  gap: var(--gap);
}
