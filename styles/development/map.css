.map {
  width: 100%;
  /* @bugfix @affected Old browsers. */
  min-width: 100%;
  min-height: 30em;
  aspect-ratio: 9/16;
  margin: auto;
  /* @note Couleur en lien avec le background dominant des tuiles choisies pour les cartes Leaflet. */
  background-color: hsl(40, 11%, 89%);
  /* Évite occasionnellement un débordement des tuiles. */
  overflow: hidden;

  @media (orientation: landscape) {
    aspect-ratio: 16/9;
  }
}

.map-grayscale .leaflet-layer {
  filter: grayscale(1);
}

.map-dark .leaflet-layer {
  filter: grayscale(1) invert(1) brightness(1.1) contrast(0.7);
}

.map-vintage {
  position: relative;

  & .leaflet-layer {
    filter: sepia(0.5);
  }

  &::before,
  &::after {
    /* @note On ne peut pas appliquer de filtre SVG directement sur les tuiles, on passe par un pseudo-élément. */
    content: '';
    position: absolute;
    z-index: 500;
    inset: 0;
    pointer-events: none;
  }

  &::before {
    background-image: radial-gradient(var(--colorAB0), var(--colorS5));
  }

  &::after {
    filter: url('../sprites/filter.svg#noise') sepia(1) opacity(0.4);
  }
}

:root .map {
  & .leaflet-control {
    border: none;
    box-shadow: var(--shadow6);
  }

  & .leaflet-popup-content-wrapper {
    /* @note Unité rem obligatoire pour éviter les conflits sur la carte. */
    font-size: 1rem;
    color: var(--colorG38);
    border-radius: 0.2em;
    box-shadow: var(--shadow6);
  }
}

.leaflet-popup-content {
  max-width: calc(100vw - 6em);
}

.leaflet-popup-tip {
  box-shadow: var(--shadow6);
}

.leaflet-marker-icon {
  /* @note Pour prévenir l'effet sur :focus et :hover. */
  outline: none;

  &:focus-visible::after {
    content: '';
    display: block;
    box-sizing: border-box;
    position: relative;
    z-index: -1;
    height: 4em;
    width: 4em;
    border: 1em solid var(--colorAS22);
    /* @note Affiche un viseur autour du marqueur qui permet de l'identifier. */
    clip-path: polygon(45% 0%, 55% 0%, 55% 45%, 100% 45%, 100% 55%, 55% 55%, 55% 100%, 45% 100%, 45% 55%, 0% 55%, 0% 45%, 45% 45%);
    transform: translate(-0.35em, -2.5em);
  }

  &:where(:focus, :hover) .marker-icon {
    animation: anim-bounce 0.35s ease infinite alternate;
  }
}

.marker-icon {
  filter: drop-shadow(0.3em 0.3em 0.3em var(--colorAB5));

  & > :first-child {
    fill: var(--color, hsl(16, 100%, 66%));
  }
  
  & > :last-child {
    fill: var(--colorB);
    opacity: 0.15;
  }

  .start-map & {
    animation: anim-drop 1s ease;
  }
}

@keyframes anim-bounce {
  to {
    transform: translate(0, -16px);
  }
}

@keyframes anim-drop {
  0% {
    transform: translate(0, -100vh);
  }

  50% {
    transform: translate(0, 0);
  }

  75% {
    transform: translate(0, -40px);
  }

  100% {
    transform: translate(0, 0);
  }
}
