.accordion {
  display: flex;
  flex-direction: column;
  gap: 0.5em;

  & > * > :first-child {
    /* @note : À mettre en corélation avec un "display: block".
    overflow: hidden
    white-space: nowrap
    text-overflow: ellipsis
    */
    box-sizing: border-box;
    display: flex;
    align-items: center;
    width: 100%;
    line-height: 1;
    padding: 0.75em 1em;
    color: var(--colorT);
    background-color: var(--colorG27);
    border: none;
    border-radius: 0.3em;
    box-shadow: var(--shadow8);
    cursor: pointer;
    outline: none;

    &:focus-within,
    &:hover {
      outline: none;
    }

    &::after {
      content: '\2039';
      margin-inline-start: auto;
      font-weight: bold;
    }

    & svg {
      margin-inline-end: 1em;
    }

    &:where(:focus-visible, :hover) {
      @media (hover: hover) and (pointer: fine) {
        color: var(--colorW);
        background-color: var(--color2);
        box-shadow: 0.5rem 0.5rem 2rem var(--colorAB25);
        animation: anim-accordion 0.1s ease-in-out;
      }
    }
  }

  & > * > summary::before {
    all: unset;
  }

  & .accordion-summary::after {
    /* @note Sprécifique aux éléments remplacés. */
    transition: transform 0.5s ease-in-out;
  }

  & > * > :last-child {
    overflow: hidden;
    padding: 0 1em;
    background-color: var(--color1);
    /* Compense le décalage de la "bordure" en box-shadow inset. */
    border-radius: calc(var(--r2) + 1px);
    box-shadow: var(--shadow8), inset 0 -1px 0 1px var(--colorA1);
    transition: max-height 0.5s ease-in-out;

    &[aria-hidden='true'] {
      max-height: 0;
    }
  }

  & > details {
    all: unset;
  }

  & > details[open] summary::after,
  & [data-open='true'] .accordion-summary::after {
    transform: rotate(-90deg);
  }
}

@keyframes anim-accordion {
  to {
    transform: scale(1.01) translateZ(0);
  }
}
